john gay wrote looking things isaid pgcc site seem updated least year also looking gcc series might better pgcc patches written gcc good better pgcc quite pgcc written back days gcc splintered due perception slow progress main branch number linux distributions wound using egcs partly derived pgcc work recall happiness restored world gcc later bottom line pentiums better instruction sets original instructions still support really instruction consequence gcc anyway since cmov introduced pentium pro gcc use instruction directed march pentiumpro generally get percent improvement code compiled option fail pentium earlier processors pentium also started introducing pipelining properly generated code upto faster equivulent code performs function art instruction scheduling rearranging instructions generated compiler make best use parallel superscalar pipelines present modern cpu gcc fair go scheduling according mcpu pentium pentiumpro option gcc better job fine tunes processors athlon athlon xp process replacing compiler instruction scheduling whole new mechanism even better job ways road yet gcc exotic extra instructions sets gcc make use sse instructions instead instructions use mfpmath sse option may see speed benefit chance may also see incompatibilities gcc still use code missing functionality sse instruction set double precision floats example afaik current gcc ever use mmx instructions though gcc enables user code explicitly generate instructions code kernel sometimes uses instruction sets get super fast block copies memory raid math much else sure improvements introduce think mostly speed improvements rather execution changes introduced _much_ improved version sse viable replacement fpu code sse supports single precision floats handle doubles mmx sse shared registers fpu hobbles bit large dedicated register file far cpu equipped amd cpus said well course whole ball game paul irish linux users group ilug linux ie list maintainer listmaster linux ie 