yahoo groups sponsor dvds free join new version unison available testing incorporates several small improvements main change fix bug potentially serious safety consequences small number users habit running one instance unison time parallel users strongly encouraged upgrade others wait wish release includes pre built executables linux solaris windows looking unison windows maintainer moment none active developers regularly using unison windows machine configured properly building executables export grab enjoy benjamin changes since added preference maxthreads used limit number simultaneous file transfers added backupdir preference controls backup files stored basic support added osx particular unison recognizes one hosts synchronized running osx switches case insensitive treatment filenames foo foo considered file osx yet fully working however particular files resource forks synchronized correctly hash used form archive name also added names temp files created file transfer reason update detection going silently delete old temp files find along way want prevent deleting temp files belonging instances unison may running parallel synchronizing different host thanks ruslan ermilov suggestion several small user interface improvements documentation faq bug reporting instructions split separate html pages accessible directly unison web page additions faq particular suggestions performance tuning makefile makefile ocaml sets uistyle text uistyle gtk automatically depending whether finds lablgtk installed unison compile box osx changes since changing profile works windows file movement optimization unison tries use local copy instead transfer moved copied files controled boolean option xferbycopying network statistics window transfer rate amount data transferred nb available windows cygwin version symlinks work cygwin version dynamically linked fixed potential deadlock synchronizing windows unix small improvements neither tt userprofile tt home environment variables set unison put temporary commit log called tt danger readme directory named tt unison environment variable otherwise use tt alternative set values fastcheck yes true false default auto silent implies contactquietly source code code reorganization tidying started breaking basic utility modules non unison specific stuff made available projects several makefile docs changes release comments update ml connection information stored global variables anymore changes since small bugfix textual user interface unix avoid leaving terminal bad state would echo inputs unison exited changes since improvements main web page stable beta version docs accessible user manual revised added new preferences sshcmd rshcmd specifying paths ssh rsh programs contactquietly suppressing contacting server message unison startup graphical ui bug fixes fixed small bug ui neglected change displayed column headers loading new profile caused roots change fixed bug would put text ui infinite loop encountered conflict run batch mode added code try fix display non ascii characters filenames windows systems gtk ui code currently untested one people reported problems display non ascii filenames appreciate knowing actually fixes things prefer force newer works properly bug reported sebastian urbaniak sean fulton user interface unison behavior renamed proceed go graphical ui added exit status textual user interface paths synchronized conflicts errors update detection noted log file end messages log use briefer format changed text ui startup sequence tt unison ui text use default profile instead failing made improvements error messages added debugging messages remote ml changes since incorporated multi threaded transport sub system transfers several files time thereby making much effective use available network bandwidth unlike earlier attempt time rely native thread library ocaml instead implement light weight non preemptive multi thread library ocaml directly version appears stable adjustments unison made accommodate multi threaded version include particular changes user interface logging example two log entries transferring task one beginning one end suppressed warning messages removing temp files left previous unison run warning work nicely multi threading temp file names made less likely coincide name file created user take form filename serial unison tmp added new command gtk user interface pressing causes unison start new update detection phase using paths paths detected changed yet marked successfully completed use command quickly restart unison set paths still needing attention previous run made ignorecase preference user visible changed initialization code manually set true even neither host running windows may useful using unison running unix system fat volume mounted small improvements bug fixes errors preference files generate fatal errors rather warnings startup time go also fixed bug preventing warnings appearing text ui users running unsuspectingly garbage prefs files may get error reports error reporting preference files provides file name line number intelligible message case identical change files nothing replicas changed identical ways since last sync files prefix excluded scanning preference files rsync instructions send directly instead first marshaled try forever get fingerprint continuously changing file unison give certain number retries bug fixes including the_one reported peter selinger force older preference working compilation upgraded new ocaml compiler lablgtk library patched version used compiling windows added option compile unison windows platform cygwin gnu compiler option supports building dynamically linked unison executables changes since fixed silly debilitating bug client startup sequence changes since added addprefsto preference set controls preference file new preferences new ignore patterns added bug fix read initial connection header one byte time block header shorter expected bug affect normal operation made hard tell trying use unison incorrectly old version server since would hang instead giving error message changes since changed fastcheck boolean string preference legal values yes fast check safe check default fast check also happens safe running unix safe check windows default default several preferences renamed consistency preference names spelled lowercase backward compatibility old names still work mentioned manual temp files created diff merge commands named prepending new prefix file name rather appending suffix avoid confusing diff merge programs depend suffix guess type file contents set keepalive option server socket make sure server times communication link unexpectedly broken bug fixes updating small files unison closes destination file file permissions properly updated file behind followed link several small fixes changes since major windows performance improvement ve_added preference fastcheck makes unison look file creation time last modified time check whether changed result huge speedup checking updates large replicas switch set unison use file creation times pseudo inode numbers scanning windows replicas updates instead reading full contents every file may cause unison miss propagating update create time modification time length file unchanged update easy achieve done however unison never overwrite update change replica since always safe check updates propagating change thus reasonable use switch time occasionally run unison fastcheck set false worried unison may overlooked update warning change yet thoroughly field tested set fastcheck preference pay careful attention unison new functionality centralized backups merging version incorporates two pieces major new functionality implemented sylvain roy summer internship penn centralized backup facility keeps full backup selected files replica merging feature allows unison invoke external file merging tool resolve conflicting changes individual files centralized backups unison maintains full backups last synchronized versions files replica function backups usual sense common version invoking external merge programs backed files stored directory unison backup host name directory changed setting environment variable unisonbackupdir predicate backup controls files actually backed giving preference backup path causes backing files files added backup directory whenever unison updates archive means unison reconstructs archive scratch upgrade archive files manually deleted files backed otherwise file backed first time unison propagates update preference backupversions controls many previous versions file kept default last synchronized version plus one backup backward compatibility backups preference also still supported backup preferred ok manually delete files backup directory throw away directory unison uses files anything important checks fingerprint matches the_one expects merging user interfaces offer new merge command invoked pressing changed file selected actual merging performed external program preferences merge control program invoked backup exists file see backup preference merge preference used purpose otherwise used cases value preference string representing command passed shell invoke merge program within string special substrings new old may appear point unison substitute follows invoking command replaced name local copy file replaced name temporary file contents remote copy file transferred unison prior performing merge new replaced name temporary file unison expects written merge program finishes giving desired new contents file old replaced name backed copy original version file state end last successful run unison one exists applies merge example unix systems setting merge preference merge old new tell unison use external program merging large number external merging programs available example emacs users may find following convenient emacs eval ediff merge files nil new merge emacs eval ediff merge files ancestor old nil new commands displayed two lines avoid running edge page preference file written single line external program exits without leaving file path new unison considers merge failed merge program writes file called new exits non zero status code unison considers merge succeeded generated conflicts case attempts invoke external editor user resolve conflicts value editor preference controls editor invoked unison default emacs please send us suggestions useful values merge preferences like give several examples manual smaller changes one preference file includes another unison longer adds suffix prf included file default file precisely given name exists unison directory used otherwise unison add prf change means included preference files named blah include instead blah prf unison offer choose preference file dialog linux systems offer statically linked dynamically linked executable static one larger probably run systems since depend versions dynamically linked library modules available fixed force prefer preferences getting propagation direction exactly backwards fixed bug startup code would cause unison crash default profile unison default prf exist fixed bug the_run profile first created unison would confusingly display roots reverse order user interface developers ve_added module dependency diagram source distribution src dependencies ps help new prospective developers navigating code changes since incompatible change archive format changed incompatible change startup sequence completely rewritten greatly simplified main user visible change defaultpath preference removed effect approximated using multiple profiles include directives incorporate common settings uses defaultpath existing profiles changed path another change startup behavior affect users longer possible specify roots profile command line achieve similar effect though breaking profile two default prf root blah root foo include common common prf everything else unison common want specify roots explicitly prefer force options extended allow users specify files recent modtimes propagated writing either prefer newer force newer symmetry unison also accept prefer older force older force older newer options used times also set graphical user interface provides access facilities one basis via actions menu names roots aliased allow replicas relocated without changing name archive file unison stores information runs feature experts see archive files section manual information graphical user interface new command provided synchronization menu switching new profile without restarting unison scratch gui also supports one key shortcuts commonly used profiles profile contains preference form key single digit pressing key cause unison immediately switch profile begin synchronization scratch actions may selected set changes currently displayed discarded profile may include preference label string giving descriptive string described options selected profile string listed along profile name profile selection dialog displayed top right corner main unison window minor fixed bug would sometimes cause diff display order files backwards relative main user interface thanks pascal brisset fix unix systems graphical version unison check display variable set automatically fall back textual user interface synchronization paths path preferences matched ignore preferences path specified path preference ignored skipped numerous bugfixes small improvements changes since synchronization modification times disabled directories preference files may include lines form include name cause name prf read point synchronization permission windows unix works properly binding cygwin binmode added environment cygwin port openssh works properly non cygwin context servercmd addversionno preferences used together addversionno appends appropriate nnn server command found using value servercmd preference one else unison pref val pref val allowed boolean values former used set preference false lot small bugs fixed changes since log preference set true default since log file seems useful users several miscellaneous bugfixes involving symlinks changes since incompatible change archive format changed several significant bugs introduced fixed changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow new functionality unison synchronizes file modtimes user ids group ids new features controlled set new preferences currently false default times preference set true file modification times propaged representations time may granularity replicas unison may always able make modtimes precisely equal get close operating systems involved allow owner preference set true file ownership information synchronized group preference set true group information synchronized numericids preference set true owner group information synchronized numerically default owner group numbers converted names replica names synchronized special user id special group never mapped via user group names even preference set added integer valued preference perms used control propagation permission bits value preference mask indicating permission bits synchronized set default bits set uid set gid bits synchronised synchronizing theses latter bits security hazard want synchronize bits set value preference added log preference default false makes unison keep complete record changes makes replicas default record written file called unison log user home directory value home environment variable want someplace else set logfile preference full pathname want unison use added ignorenot preference maintains set patterns paths definitely ignored whether match ignore pattern path ignored iff matches ignore pattern match ignorenot patterns user interface improvements roots displayed user interface order given command line preferences file batch preference set graphical user interface longer waits user confirmation displays warning message simply pops advisory window dismiss button bottom keeps going added new preference controlling many status messages printed update detection statusdepth controls maximum depth paths local machine longer paths displayed non directory paths value integer default removed trace silent preferences seem useful many preferences controlling output various ways text ui displays default command the_one used user types return instead available commands typing print full list possibilities function finds canonical hostname local host used example calculating name archive file used remember files synchronized normally uses gethostname operating system call however environment variable unisonlocalhostname set value used instead makes easier use unison situations machine name changes frequently laptop gets moved around lot file owner group displayed detail window bottom screen unison configured synchronize hackers updated jacques garrigue new version lablgtk means throw away local patched version compiling gtk version unison sources need update copy lablgtk developers release available warning installing lablgtk windows currently bit challenging todo txt file source distribution cleaned reorganized list pending tasks much easier make sense people may want contribute programming energies also separate file bugs txt open bugs tk user interface removed maintained longer compiles debug preference prints quite bit additional information useful identifying sources problems version number remote server checked right away connection setup handshake rather later somebody sent bug report server crash turned come using inconsistent versions better check earlier way crash either client server unison runs correctly bit architectures alpha linux distributing binaries architectures least someone would like make available glad provide link bug fixes pattern matching ignore case insensitive unison case insensitive mode one replicas windows machine people trouble mysterious failures propagation updates files would falsely reported changed synchronization fixed numerous smaller fixes changes since added number sorting modes user interface default conflicting changes displayed top rest entries sorted alphabetical order behavior changed following ways setting sortnewfirst preference true causes newly created files displayed changed files setting sortbysize causes files displayed increasing order size giving preference sortfirst pattern pattern path descriptor format ignore follow patterns causes paths matching pattern displayed first similarly giving preference sortlast pattern causes paths matching pattern displayed last sorting preferences described detail user manual sortnewfirst sortbysize flags also accessed sort menu grpahical user interface added two new preferences used change unison fundamental behavior make like mirroring tool instead synchronizer giving preference prefer argument root adding prefer root command line prefer root profile means conflict contents root propagated replica questions asked non conflicting changes treated usual giving preference force argument root make unison resolve differences favor given root even replica changed options used care information available manual small changes changed default answer yes two button dialogs graphical interface seems intuitive rsync preference removed used activate rsync compression file transfers rsync compression enabled default text user interface arrows indicating direction changes propagated printed differently user overridded unison default recommendation instead matches behavior graphical interface displays arrows different color carriage returns control ignored ends lines profiles windows compatibility preferences fully documented user manual changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow new improved functionality new preference sortbysize controls order changes displayed user set true smallest changed files displayed first default setting false new preference sortnewfirst causes newly created files listed updates user interface allow ssh protocol specify port incompatible change unison protocol deprecated added file socket may modify profiles unison directory replica specified without explicit protocol assume refers file previously saul foo meant use ssh connect saul access foo directory means access saul via remote file mechanism samba old effect achieved writing ssh saul foo changed startup sequence case roots given profile given command line new behavior use default profile creating exist temporarily override roots manual claimed case would work reading profile afaik never true user interfaces files conflicts always listed first new preference sshversion used control version ssh used connect server legal values default empty make unison use whatever version ssh installed default ssh command situation permissions file updated side handled correctly used report spurious conflict improvements windows version fact filenames treated case insensitively windows handled correctly exact behavior described cross platform section manual possible synchronize windows shares host drive path workarounds bug syncing root directories windows difficult thing fix ocaml bug unix opendir fails versions windows improvements gtk user interface tk interface longer maintained ui displays actions differently blue explicitly changed user unison default recommendation colorful appearance initial profile selection window works better transfers failed message effect displayed along synchronization complete end transfer phase case may scrolled top added global progress meter displaying percentage total bytes transferred far improvements text user interface file details displayed automatically conflict detected warning generated temporary file left previous run unison unison longer wait response running batch mode ui displays short list possible inputs time waits user interaction ui quits immediately rather looping back starting interaction user presses asked whether propagate changes pressing text user interface proceed immediately propagating updates without asking questions documentation installation changes manual includes faq plus sections common problems tricks contributed users download page download directory explicitly say current stable beta test version numbers ocaml sources minute developers version guaranteed stable even compile given time available download page added subsection manual describing cross platform issues case conflicts illegal filenames many small bug fixes random improvements changes since several bug fixes important bug rsync module would occasionally cause change propagation fail rename error changes since multi threaded transport system disabled default stable enough yet various bug fixes new experimental feature final component path argument may wildcard specifier unison sees path expands path client corresponding list paths listing contents directory note use wildcard paths command line probably need use quotes backslash prevent interpreted shell roots local contents first one used expanding wildcard paths nb first one canonization step the_one listed first user interface the_one listed first command line preferences file changes since transport subsystem includes implementation sylvain gommier norman ramsey tridgell mackerras rsync protocol protocol achieves much faster transfers small part large file changed sending diffs feature mainly helpful transfers slow links fast local area networks actually degrade performance left default start unison rsync option put rsync true preferences file turn progress bars diplayed remote file transfers showing percentage file transferred far version numbering scheme changed new releases numbers like second component incremented every significant public release third component patch level miscellaneous improvements gtk based user interface manual available pdf format experimenting using multi threaded transport subsystem transfer several files time making much effective use available network bandwidth feature completely stable yet default disabled release version unison want play multi threaded version need recompile unison sources described documentation setting threads flag makefile ocaml true make sure ocaml compiler installed pthreads configuration option verify checking whether file threads threads cma ocaml standard library directory contains string lpthread near end changes since reduced memory footprint especially important first run unison gather information files repositories fixed bug would cause socket server nt fail client exits added shift modifier ignore menu shortcut keys gtk interface avoid hitting accidentally changes since tunneling ssh supported windows version see installation section manual detailed instructions transport subsystem includes implementation rsync protocol built sylvain gommier norman ramsey protocol achieves much faster transfers small part large file changed sending diffs rsync feature default current version use rsync switch turn nb still lot tuning may notice much speedup yet experimenting multi threaded transport subsystem written jerome vouillon downloadable binaries still single threaded want try multi threaded version need recompile sources say make threads true native thread support compiler required use option threads select maximal number concurrent threads default multi threaded single threaded clients servers interoperate new gtk based user interface available thanks jacques garrigue tk user interface still works shifting development effort gtk interface ocaml required compiling unison sources modules uitk myfileselect changed use labltk instead camltk compile tk interface windows must ocaml installing put tcl rather suggested program files tcl sure install headers libraries installed default added new addversionno switch causes unison use unison currentversionnumber instead unison remote server command allows multiple versions unison coexist conveniently server whichever version run client version selected server changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow version fixes several annoying bugs including cases propagation file permissions working umask ignored creating directories directories create writable read directory contents propagated handling warnings generated server synchronizing path whose parent directory sides flagged erroneous fixed bugs related symnbolic links nonexistant roots change deletion new contents propagated onto follow ed symlink file pointed link changed used change link fit assertion follow means link completely invisible one root exist propagating root top used fail becuase unison could calculate working directory write changes fixed human readable timestamp added unison archive files semantics path name regular expressions correspond better minor improvements text ui command going back previous items organization export directory changed easier find download things changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow version tested extensively windows major internal changes designed make unison safer run time replicas changed user internal performance improvements changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow number internal functions changed reduce amount memory allocation especially first synchronization help power users big replicas reimplementation low level remote procedure call stuff preparation adding rsync like smart file transfer later release miscellaneous bug fixes changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow fixed small bugs interpretation ignore patterns fixed problems preventing windows version working correctly click started fixes treatment file permissions windows causing spurious reports different permissions synchronizing windows unix systems fixed one non tail recursive list processing function causing stack overflows synchronizing large replicas changes since text user interface provides commands ignoring files found fixed non tail recursive list processing functions power users reported success large replicas incompatible change files ending tmp longer ignored automatically want ignore files put appropriate ignore pattern profile incompatible change syntax ignore follow patterns changed instead putting line form ignore regexp profile unison default prf put ignore regexp regexp moreover two styles pattern also recognized ignore name name matches path one component matches name ignore path path matches exactly path path standard globbing conventions used name path matches single character except matches sequence characters including xyz matches character set bb ccc matches one bb ccc see user manual examples changes since users reporting stack overflows synchronizing huge directories found fixed non tail recursive list processing functions hope solve problem please give try let us know major additions documentation changes since major internal tidying many small bugfixes major additions user manual unison started arguments prompt automatically name profile file containing roots synchronized makes possible start graphical ui desktop icon fixed small bug text ui nt raising signal exception changes since precompiled windows binary last release compiled old ocaml compiler causing propagation permissions work perhaps leading strange behaviors ve_heard reports corrected using precompiled binaries windows please upgrade added debug command line flag controls debugging various modules say debug xxx enable debug tracing module xxx debug turn absolutely everything fixed small bug text ui nt raising signal exception changes since incompatible change names formats preference files unison directory changed particular file prefs renamed default prf contents file ignore merged default prf line form regexp ignore become line form ignore regexp default prf unison handles permission bits symbolic links see manual details different preference files unison directory start unison like unison profilename one anonymous command line argument file unison profilename prf loaded instead default prf improvements terminal handling text user interface added switch killserver terminates remote server process unison client shutting even using sockets communication default remote server created using ssh rsh terminated automatically socket server left running started socket server mode unison prints server started stderr ready accept connections may useful scripts want tell socket mode server finished initalization make nightly mirror current internal development tree case anyone wants minute version hack around added file contrib suggestions help us make unison better changes version changes since added preference maxthreads used limit number simultaneous file transfers added backupdir preference controls backup files stored basic support added osx particular unison recognizes one hosts synchronized running osx switches case insensitive treatment filenames foo foo considered file osx yet fully working however particular files resource forks synchronized correctly hash used form archive name also added names temp files created file transfer reason update detection going silently delete old temp files find along way want prevent deleting temp files belonging instances unison may running parallel synchronizing different host thanks ruslan ermilov suggestion several small user interface improvements documentation faq bug reporting instructions split separate html pages accessible directly unison web page additions faq particular suggestions performance tuning makefile makefile ocaml sets uistyle text uistyle gtk automatically depending whether finds lablgtk installed unison compile box osx changes since changing profile works windows file movement optimization unison tries use local copy instead transfer moved copied files controled boolean option xferbycopying network statistics window transfer rate amount data transferred nb available windows cygwin version symlinks work cygwin version dynamically linked fixed potential deadlock synchronizing windows unix small improvements neither tt userprofile tt home environment variables set unison put temporary commit log called tt danger readme directory named tt unison environment variable otherwise use tt alternative set values fastcheck yes true false default auto silent implies contactquietly source code code reorganization tidying started breaking basic utility modules non unison specific stuff made available projects several makefile docs changes release comments update ml connection information stored global variables anymore changes since small bugfix textual user interface unix avoid leaving terminal bad state would echo inputs unison exited changes since improvements main web page stable beta version docs accessible user manual revised added new preferences sshcmd rshcmd specifying paths ssh rsh programs contactquietly suppressing contacting server message unison startup graphical ui bug fixes fixed small bug ui neglected change displayed column headers loading new profile caused roots change fixed bug would put text ui infinite loop encountered conflict run batch mode added code try fix display non ascii characters filenames windows systems gtk ui code currently untested one people reported problems display non ascii filenames appreciate knowing actually fixes things prefer force newer works properly bug reported sebastian urbaniak sean fulton user interface unison behavior renamed proceed go graphical ui added exit status textual user interface paths synchronized conflicts errors update detection noted log file end messages log use briefer format changed text ui startup sequence tt unison ui text use default profile instead failing made improvements error messages added debugging messages remote ml changes since incorporated multi threaded transport sub system transfers several files time thereby making much effective use available network bandwidth unlike earlier attempt time rely native thread library ocaml instead implement light weight non preemptive multi thread library ocaml directly version appears stable adjustments unison made accommodate multi threaded version include particular changes user interface logging example two log entries transferring task one beginning one end suppressed warning messages removing temp files left previous unison run warning work nicely multi threading temp file names made less likely coincide name file created user take form filename serial unison tmp added new command gtk user interface pressing causes unison start new update detection phase using paths paths detected changed yet marked successfully completed use command quickly restart unison set paths still needing attention previous run made ignorecase preference user visible changed initialization code manually set true even neither host running windows may useful using unison running unix system fat volume mounted small improvements bug fixes errors preference files generate fatal errors rather warnings startup time go also fixed bug preventing warnings appearing text ui users running unsuspectingly garbage prefs files may get error reports error reporting preference files provides file name line number intelligible message case identical change files nothing replicas changed identical ways since last sync files prefix excluded scanning preference files rsync instructions send directly instead first marshaled try forever get fingerprint continuously changing file unison give certain number retries bug fixes including the_one reported peter selinger force older preference working compilation upgraded new ocaml compiler lablgtk library patched version used compiling windows added option compile unison windows platform cygwin gnu compiler option supports building dynamically linked unison executables changes since fixed silly debilitating bug client startup sequence changes since added addprefsto preference set controls preference file new preferences new ignore patterns added bug fix read initial connection header one byte time block header shorter expected bug affect normal operation made hard tell trying use unison incorrectly old version server since would hang instead giving error message changes since changed fastcheck boolean string preference legal values yes fast check safe check default fast check also happens safe running unix safe check windows default default several preferences renamed consistency preference names spelled lowercase backward compatibility old names still work mentioned manual temp files created diff merge commands named prepending new prefix file name rather appending suffix avoid confusing diff merge programs depend suffix guess type file contents set keepalive option server socket make sure server times communication link unexpectedly broken bug fixes updating small files unison closes destination file file permissions properly updated file behind followed link several small fixes changes since major windows performance improvement ve_added preference fastcheck makes unison look file creation time last modified time check whether changed result huge speedup checking updates large replicas switch set unison use file creation times pseudo inode numbers scanning windows replicas updates instead reading full contents every file may cause unison miss propagating update create time modification time length file unchanged update easy achieve done however unison never overwrite update change replica since always safe check updates propagating change thus reasonable use switch time occasionally run unison fastcheck set false worried unison may overlooked update warning change yet thoroughly field tested set fastcheck preference pay careful attention unison new functionality centralized backups merging version incorporates two pieces major new functionality implemented sylvain roy summer internship penn centralized backup facility keeps full backup selected files replica merging feature allows unison invoke external file merging tool resolve conflicting changes individual files centralized backups unison maintains full backups last synchronized versions files replica function backups usual sense common version invoking external merge programs backed files stored directory unison backup host name directory changed setting environment variable unisonbackupdir predicate backup controls files actually backed giving preference backup path causes backing files files added backup directory whenever unison updates archive means unison reconstructs archive scratch upgrade archive files manually deleted files backed otherwise file backed first time unison propagates update preference backupversions controls many previous versions file kept default last synchronized version plus one backup backward compatibility backups preference also still supported backup preferred ok manually delete files backup directory throw away directory unison uses files anything important checks fingerprint matches the_one expects merging user interfaces offer new merge command invoked pressing changed file selected actual merging performed external program preferences merge control program invoked backup exists file see backup preference merge preference used purpose otherwise used cases value preference string representing command passed shell invoke merge program within string special substrings new old may appear point unison substitute follows invoking command replaced name local copy file replaced name temporary file contents remote copy file transferred unison prior performing merge new replaced name temporary file unison expects written merge program finishes giving desired new contents file old replaced name backed copy original version file state end last successful run unison one exists applies merge example unix systems setting merge preference merge old new tell unison use external program merging large number external merging programs available example emacs users may find following convenient emacs eval ediff merge files nil new merge emacs eval ediff merge files ancestor old nil new commands displayed two lines avoid running edge page preference file written single line external program exits without leaving file path new unison considers merge failed merge program writes file called new exits non zero status code unison considers merge succeeded generated conflicts case attempts invoke external editor user resolve conflicts value editor preference controls editor invoked unison default emacs please send us suggestions useful values merge preferences like give several examples manual smaller changes one preference file includes another unison longer adds suffix prf included file default file precisely given name exists unison directory used otherwise unison add prf change means included preference files named blah include instead blah prf unison offer choose preference file dialog linux systems offer statically linked dynamically linked executable static one larger probably run systems since depend versions dynamically linked library modules available fixed force prefer preferences getting propagation direction exactly backwards fixed bug startup code would cause unison crash default profile unison default prf exist fixed bug the_run profile first created unison would confusingly display roots reverse order user interface developers ve_added module dependency diagram source distribution src dependencies ps help new prospective developers navigating code changes since incompatible change archive format changed incompatible change startup sequence completely rewritten greatly simplified main user visible change defaultpath preference removed effect approximated using multiple profiles include directives incorporate common settings uses defaultpath existing profiles changed path another change startup behavior affect users longer possible specify roots profile command line achieve similar effect though breaking profile two default prf root blah root foo include common common prf everything else unison common want specify roots explicitly prefer force options extended allow users specify files recent modtimes propagated writing either prefer newer force newer symmetry unison also accept prefer older force older force older newer options used times also set graphical user interface provides access facilities one basis via actions menu names roots aliased allow replicas relocated without changing name archive file unison stores information runs feature experts see archive files section manual information graphical user interface new command provided synchronization menu switching new profile without restarting unison scratch gui also supports one key shortcuts commonly used profiles profile contains preference form key single digit pressing key cause unison immediately switch profile begin synchronization scratch actions may selected set changes currently displayed discarded profile may include preference label string giving descriptive string described options selected profile string listed along profile name profile selection dialog displayed top right corner main unison window minor fixed bug would sometimes cause diff display order files backwards relative main user interface thanks pascal brisset fix unix systems graphical version unison check display variable set automatically fall back textual user interface synchronization paths path preferences matched ignore preferences path specified path preference ignored skipped numerous bugfixes small improvements changes since synchronization modification times disabled directories preference files may include lines form include name cause name prf read point synchronization permission windows unix works properly binding cygwin binmode added environment cygwin port openssh works properly non cygwin context servercmd addversionno preferences used together addversionno appends appropriate nnn server command found using value servercmd preference one else unison pref val pref val allowed boolean values former used set preference false lot small bugs fixed changes since log preference set true default since log file seems useful users several miscellaneous bugfixes involving symlinks changes since incompatible change archive format changed several significant bugs introduced fixed changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow new functionality unison synchronizes file modtimes user ids group ids new features controlled set new preferences currently false default times preference set true file modification times propaged representations time may granularity replicas unison may always able make modtimes precisely equal get close operating systems involved allow owner preference set true file ownership information synchronized group preference set true group information synchronized numericids preference set true owner group information synchronized numerically default owner group numbers converted names replica names synchronized special user id special group never mapped via user group names even preference set added integer valued preference perms used control propagation permission bits value preference mask indicating permission bits synchronized set default bits set uid set gid bits synchronised synchronizing theses latter bits security hazard want synchronize bits set value preference added log preference default false makes unison keep complete record changes makes replicas default record written file called unison log user home directory value home environment variable want someplace else set logfile preference full pathname want unison use added ignorenot preference maintains set patterns paths definitely ignored whether match ignore pattern path ignored iff matches ignore pattern match ignorenot patterns user interface improvements roots displayed user interface order given command line preferences file batch preference set graphical user interface longer waits user confirmation displays warning message simply pops advisory window dismiss button bottom keeps going added new preference controlling many status messages printed update detection statusdepth controls maximum depth paths local machine longer paths displayed non directory paths value integer default removed trace silent preferences seem useful many preferences controlling output various ways text ui displays default command the_one used user types return instead available commands typing print full list possibilities function finds canonical hostname local host used example calculating name archive file used remember files synchronized normally uses gethostname operating system call however environment variable unisonlocalhostname set value used instead makes easier use unison situations machine name changes frequently laptop gets moved around lot file owner group displayed detail window bottom screen unison configured synchronize hackers updated jacques garrigue new version lablgtk means throw away local patched version compiling gtk version unison sources need update copy lablgtk developers release available warning installing lablgtk windows currently bit challenging todo txt file source distribution cleaned reorganized list pending tasks much easier make sense people may want contribute programming energies also separate file bugs txt open bugs tk user interface removed maintained longer compiles debug preference prints quite bit additional information useful identifying sources problems version number remote server checked right away connection setup handshake rather later somebody sent bug report server crash turned come using inconsistent versions better check earlier way crash either client server unison runs correctly bit architectures alpha linux distributing binaries architectures least someone would like make available glad provide link bug fixes pattern matching ignore case insensitive unison case insensitive mode one replicas windows machine people trouble mysterious failures propagation updates files would falsely reported changed synchronization fixed numerous smaller fixes changes since added number sorting modes user interface default conflicting changes displayed top rest entries sorted alphabetical order behavior changed following ways setting sortnewfirst preference true causes newly created files displayed changed files setting sortbysize causes files displayed increasing order size giving preference sortfirst pattern pattern path descriptor format ignore follow patterns causes paths matching pattern displayed first similarly giving preference sortlast pattern causes paths matching pattern displayed last sorting preferences described detail user manual sortnewfirst sortbysize flags also accessed sort menu grpahical user interface added two new preferences used change unison fundamental behavior make like mirroring tool instead synchronizer giving preference prefer argument root adding prefer root command line prefer root profile means conflict contents root propagated replica questions asked non conflicting changes treated usual giving preference force argument root make unison resolve differences favor given root even replica changed options used care information available manual small changes changed default answer yes two button dialogs graphical interface seems intuitive rsync preference removed used activate rsync compression file transfers rsync compression enabled default text user interface arrows indicating direction changes propagated printed differently user overridded unison default recommendation instead matches behavior graphical interface displays arrows different color carriage returns control ignored ends lines profiles windows compatibility preferences fully documented user manual changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow new improved functionality new preference sortbysize controls order changes displayed user set true smallest changed files displayed first default setting false new preference sortnewfirst causes newly created files listed updates user interface allow ssh protocol specify port incompatible change unison protocol deprecated added file socket may modify profiles unison directory replica specified without explicit protocol assume refers file previously saul foo meant use ssh connect saul access foo directory means access saul via remote file mechanism samba old effect achieved writing ssh saul foo changed startup sequence case roots given profile given command line new behavior use default profile creating exist temporarily override roots manual claimed case would work reading profile afaik never true user interfaces files conflicts always listed first new preference sshversion used control version ssh used connect server legal values default empty make unison use whatever version ssh installed default ssh command situation permissions file updated side handled correctly used report spurious conflict improvements windows version fact filenames treated case insensitively windows handled correctly exact behavior described cross platform section manual possible synchronize windows shares host drive path workarounds bug syncing root directories windows difficult thing fix ocaml bug unix opendir fails versions windows improvements gtk user interface tk interface longer maintained ui displays actions differently blue explicitly changed user unison default recommendation colorful appearance initial profile selection window works better transfers failed message effect displayed along synchronization complete end transfer phase case may scrolled top added global progress meter displaying percentage total bytes transferred far improvements text user interface file details displayed automatically conflict detected warning generated temporary file left previous run unison unison longer wait response running batch mode ui displays short list possible inputs time waits user interaction ui quits immediately rather looping back starting interaction user presses asked whether propagate changes pressing text user interface proceed immediately propagating updates without asking questions documentation installation changes manual includes faq plus sections common problems tricks contributed users download page download directory explicitly say current stable beta test version numbers ocaml sources minute developers version guaranteed stable even compile given time available download page added subsection manual describing cross platform issues case conflicts illegal filenames many small bug fixes random improvements changes since several bug fixes important bug rsync module would occasionally cause change propagation fail rename error changes since multi threaded transport system disabled default stable enough yet various bug fixes new experimental feature final component path argument may wildcard specifier unison sees path expands path client corresponding list paths listing contents directory note use wildcard paths command line probably need use quotes backslash prevent interpreted shell roots local contents first one used expanding wildcard paths nb first one canonization step the_one listed first user interface the_one listed first command line preferences file changes since transport subsystem includes implementation sylvain gommier norman ramsey tridgell mackerras rsync protocol protocol achieves much faster transfers small part large file changed sending diffs feature mainly helpful transfers slow links fast local area networks actually degrade performance left default start unison rsync option put rsync true preferences file turn progress bars diplayed remote file transfers showing percentage file transferred far version numbering scheme changed new releases numbers like second component incremented every significant public release third component patch level miscellaneous improvements gtk based user interface manual available pdf format experimenting using multi threaded transport subsystem transfer several files time making much effective use available network bandwidth feature completely stable yet default disabled release version unison want play multi threaded version need recompile unison sources described documentation setting threads flag makefile ocaml true make sure ocaml compiler installed pthreads configuration option verify checking whether file threads threads cma ocaml standard library directory contains string lpthread near end changes since reduced memory footprint especially important first run unison gather information files repositories fixed bug would cause socket server nt fail client exits added shift modifier ignore menu shortcut keys gtk interface avoid hitting accidentally changes since tunneling ssh supported windows version see installation section manual detailed instructions transport subsystem includes implementation rsync protocol built sylvain gommier norman ramsey protocol achieves much faster transfers small part large file changed sending diffs rsync feature default current version use rsync switch turn nb still lot tuning may notice much speedup yet experimenting multi threaded transport subsystem written jerome vouillon downloadable binaries still single threaded want try multi threaded version need recompile sources say make threads true native thread support compiler required use option threads select maximal number concurrent threads default multi threaded single threaded clients servers interoperate new gtk based user interface available thanks jacques garrigue tk user interface still works shifting development effort gtk interface ocaml required compiling unison sources modules uitk myfileselect changed use labltk instead camltk compile tk interface windows must ocaml installing put tcl rather suggested program files tcl sure install headers libraries installed default added new addversionno switch causes unison use unison currentversionnumber instead unison remote server command allows multiple versions unison coexist conveniently server whichever version run client version selected server changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow version fixes several annoying bugs including cases propagation file permissions working umask ignored creating directories directories create writable read directory contents propagated handling warnings generated server synchronizing path whose parent directory sides flagged erroneous fixed bugs related symnbolic links nonexistant roots change deletion new contents propagated onto follow ed symlink file pointed link changed used change link fit assertion follow means link completely invisible one root exist propagating root top used fail becuase unison could calculate working directory write changes fixed human readable timestamp added unison archive files semantics path name regular expressions correspond better minor improvements text ui command going back previous items organization export directory changed easier find download things changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow version tested extensively windows major internal changes designed make unison safer run time replicas changed user internal performance improvements changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow number internal functions changed reduce amount memory allocation especially first synchronization help power users big replicas reimplementation low level remote procedure call stuff preparation adding rsync like smart file transfer later release miscellaneous bug fixes changes since incompatible change archive format changed make sure synchronize replicas upgrading avoid spurious conflicts first sync upgrading slow fixed small bugs interpretation ignore patterns fixed problems preventing windows version working correctly click started fixes treatment file permissions windows causing spurious reports different permissions synchronizing windows unix systems fixed one non tail recursive list processing function causing stack overflows synchronizing large replicas changes since text user interface provides commands ignoring files found fixed non tail recursive list processing functions power users reported success large replicas incompatible change files ending tmp longer ignored automatically want ignore files put appropriate ignore pattern profile incompatible change syntax ignore follow patterns changed instead putting line form ignore regexp profile unison default prf put ignore regexp regexp moreover two styles pattern also recognized ignore name name matches path one component matches name ignore path path matches exactly path path standard globbing conventions used name path matches single character except matches sequence characters including xyz matches character set bb ccc matches one bb ccc see user manual examples changes since users reporting stack overflows synchronizing huge directories found fixed non tail recursive list processing functions hope solve problem please give try let us know major additions documentation changes since major internal tidying many small bugfixes major additions user manual unison started arguments prompt automatically name profile file containing roots synchronized makes possible start graphical ui desktop icon fixed small bug text ui nt raising signal exception changes since precompiled windows binary last release compiled old ocaml compiler causing propagation permissions work perhaps leading strange behaviors ve_heard reports corrected using precompiled binaries windows please upgrade added debug command line flag controls debugging various modules say debug xxx enable debug tracing module xxx debug turn absolutely everything fixed small bug text ui nt raising signal exception changes since incompatible change names formats preference files unison directory changed particular file prefs renamed default prf contents file ignore merged default prf line form regexp ignore become line form ignore regexp default prf unison handles permission bits symbolic links see manual details different preference files unison directory start unison like unison profilename one anonymous command line argument file unison profilename prf loaded instead default prf improvements terminal handling text user interface added switch killserver terminates remote server process unison client shutting even using sockets communication default remote server created using ssh rsh terminated automatically socket server left running started socket server mode unison prints server started stderr ready accept connections may useful scripts want tell socket mode server finished initalization make nightly mirror current internal development tree case anyone wants minute version hack around added file contrib suggestions help us make unison better unsubscribe group send email unison announce unsubscribe egroups com use yahoo groups subject 