url date _clay shirky_ praise evolvable systems entire article could rewritten explain rss fact let april fool day net official holiday wanted design novelty format slip joke might look something like rss would specify limits data values remove specify required elements make optional thus silently breaking unknown number parsers around world would encourage use entity encoded html important element thus ensuring security risks unpredictable display end user would ignore years standards work fields committing egregious sins defining guid element guid using obsolete date format easily sorted date primary method extensibility would add new elements core namespace without telling anyone documenting thus making wholely resistant dtd schema validation kind years worldwide deployment would completely reverse add whatever want extensibility rules favor namespaces spec would neither define elaborate adopting namespaces would fail deprecate existing elements semantically identical namespace elements already wide use would also fail provide precedence rules cases document attempted say thing two different ways thus ensuring mass confusion among producers inconsistent behavior across consumers rss whoopee cushion joy buzzer syndication formats anyone tried accomplish anything serious metadata pretty obvious various implementations worldwide syndication format worst one possible except course others problem list rss deficiencies also list necessities rss flourished way syndication format despite many qualities weaknesses make rss infuriating serious practitioners also make possible first place removing length limitations description making title optional opened rss whole new category producer weblogger allowing encoded html description let publishers reuse existing content existing rss infrastructure without requiring produce valid xhtml could embedded directly xml document social mores rather technical rules prevent producers intentionally introducing security risks malicious script tags unpredictable display unclosed html elements publishing tools produce real conforming guids matter virtually rss parsers written high level languages handling strings efficient converting strings bytecodes handling bytecodes dates convention rss document laid reverse chronological order one seems clamoring flexibility furthermore almost babyish xml syntax far serious computational framework namespaces document type description aggregators enforcement conformity lax made possible anyone wanting rss feed write one effects ease implementation become clear compare attempts years rss right notably rss year rss three main benefits backward compatible rss never widely deployed fell obscurity soon much simpler rss introduced based rdf specifically serialization called rdf xml spec time day continues change threaten change two years later major languages development platforms ship parsers consume rdf although many perl python net third party rdf parsers various states development conformance release version generally date cvs access recommended get idea meanwhile rdf xml production tools inconsistent even rdf experts recommend using rdf tools produce rss feed want actually read major rss aggregator despite two year old promise better tools year built rss feed sophisticated personal publishing system world manually typing mishmash template tags angle brackets textarea html form extensible namespaces mentioned haphazardly poorly incorporated rss appear flourishing evolvable formats proceed adapted extended thousand small ways three main characteristics germane eventual victories strong centrally designed formats solutions produce partial results imperfect tools succeed rss feed xml document produced template built textarea consumed hundreds parsers around world know nothing xml hack apart feed regular expressions world littered formats would worked everyone better tools everyone world perfect rdf parser disposal would trivial produce consume world metadata rdf without perfect tools production consumption instantly become nightmares middle ground wrong evolvable formats always adapted earlier conditions always adapted present conditions always behind times rss stretched long descriptions optional titles entity encoded html even practices codified spec long consumers could handle evolving format ever perfectly sync challenges faces finally orgel rule named evolutionary biologist leslie orgel evolution cleverer list rss obvious deficiencies easy point wrong evolvable system point life one seeing rss rss side side could doubt rss superior technology things right however ability understand missing given moment mean one person small central group design better system long haul designed formats start strong improve logarithmically evolvable formats start weak improve exponentially rss perfect syndication format best one also currently practical infrastructure built evolvable formats always partially incomplete partially wrong ultimately better designed competition 